From 8838134bf8ca708d5241ab702744e78882277990 Mon Sep 17 00:00:00 2001
From: Konsta <konsta09@gmail.com>
Date: Wed, 7 Aug 2013 10:07:58 +0300
Subject: [PATCH] separate mHeap-based screenshot from
 BOARD_EGL_NEEDS_LEGACY_FB

No need for the Exynos/Tegra legacy fb implementation on legacy
qcom. Add a separate flag for mHeap-based screenshot in case of
future extensions. Enable mHeap-based screenshot for legacy qcom
dislay.

Change-Id: I35ff015555f19a5ba2857ad3d765d02eb6b9acde
---
 include/gui/ISurfaceComposer.h             |  4 ++--
 include/gui/SurfaceComposerClient.h        |  4 ++--
 libs/gui/Android.mk                        |  4 ++++
 libs/gui/ISurfaceComposer.cpp              |  4 ++--
 libs/gui/SurfaceComposerClient.cpp         |  6 +++---
 services/surfaceflinger/Android.mk         |  4 ++++
 services/surfaceflinger/SurfaceFlinger.cpp | 12 ++++++------
 services/surfaceflinger/SurfaceFlinger.h   |  4 ++--
 8 files changed, 25 insertions(+), 17 deletions(-)

diff --git a/include/gui/ISurfaceComposer.h b/include/gui/ISurfaceComposer.h
index 42dc830..f7bca0f 100644
--- a/include/gui/ISurfaceComposer.h
+++ b/include/gui/ISurfaceComposer.h
@@ -118,7 +118,7 @@ class ISurfaceComposer: public IInterface {
             uint32_t minLayerZ, uint32_t maxLayerZ,
             bool isCpuConsumer) = 0;
 
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     /* Capture the specified screen. requires READ_FRAME_BUFFER permission
      * This function will fail if there is a secure window on screen.
      */
@@ -144,7 +144,7 @@ class BnSurfaceComposer: public BnInterface<ISurfaceComposer> {
         GET_BUILT_IN_DISPLAY,
         SET_TRANSACTION_STATE,
         AUTHENTICATE_SURFACE,
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
         CAPTURE_SCREEN_DEPRECATED,
 #endif
         BLANK,
diff --git a/include/gui/SurfaceComposerClient.h b/include/gui/SurfaceComposerClient.h
index 3c02d33..5aa9047 100644
--- a/include/gui/SurfaceComposerClient.h
+++ b/include/gui/SurfaceComposerClient.h
@@ -39,7 +39,7 @@
 
 class DisplayInfo;
 class Composer;
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
 class IMemoryHeap;
 #endif
 class ISurfaceComposerClient;
@@ -179,7 +179,7 @@ class ScreenshotClient
             uint32_t minLayerZ, uint32_t maxLayerZ);
 
 private:
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     sp<IMemoryHeap> mHeap;
 #endif
     mutable sp<CpuConsumer> mCpuConsumer;
diff --git a/libs/gui/Android.mk b/libs/gui/Android.mk
index 244515d..eeee7a8 100644
--- a/libs/gui/Android.mk
+++ b/libs/gui/Android.mk
@@ -55,6 +55,10 @@ ifeq ($(BOARD_EGL_NEEDS_LEGACY_FB),true)
     endif
 endif
 
+ifeq ($(TARGET_QCOM_DISPLAY_VARIANT),legacy)
+	LOCAL_CFLAGS += -DUSE_LEGACY_SCREENSHOT
+endif
+
 LOCAL_MODULE:= libgui
 
 ifeq ($(TARGET_BOARD_PLATFORM), tegra)
diff --git a/libs/gui/ISurfaceComposer.cpp b/libs/gui/ISurfaceComposer.cpp
index 51318fb..47076ae 100644
--- a/libs/gui/ISurfaceComposer.cpp
+++ b/libs/gui/ISurfaceComposer.cpp
@@ -102,7 +102,7 @@ class BpSurfaceComposer : public BpInterface<ISurfaceComposer>
         remote()->transact(BnSurfaceComposer::BOOT_FINISHED, data, &reply);
     }
 
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     virtual status_t captureScreen(
             const sp<IBinder>& display, sp<IMemoryHeap>* heap,
             uint32_t* width, uint32_t* height,
@@ -288,7 +288,7 @@ status_t BnSurfaceComposer::onTransact(
             CHECK_INTERFACE(ISurfaceComposer, data, reply);
             bootFinished();
         } break;
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
         case CAPTURE_SCREEN_DEPRECATED: {
             CHECK_INTERFACE(ISurfaceComposer, data, reply);
             sp<IBinder> display = data.readStrongBinder();
diff --git a/libs/gui/SurfaceComposerClient.cpp b/libs/gui/SurfaceComposerClient.cpp
index 17af7bd..9146b6f 100644
--- a/libs/gui/SurfaceComposerClient.cpp
+++ b/libs/gui/SurfaceComposerClient.cpp
@@ -684,7 +684,7 @@ status_t ScreenshotClient::capture(
         uint32_t minLayerZ, uint32_t maxLayerZ) {
     sp<ISurfaceComposer> s(ComposerService::getComposerService());
     if (s == NULL) return NO_INIT;
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     int format = 0;
     producer->query(NATIVE_WINDOW_FORMAT,&format);
     if (format == PIXEL_FORMAT_RGBA_8888) {
@@ -719,7 +719,7 @@ status_t ScreenshotClient::update(const sp<IBinder>& display,
         uint32_t minLayerZ, uint32_t maxLayerZ) {
     sp<ISurfaceComposer> s(ComposerService::getComposerService());
     if (s == NULL) return NO_INIT;
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     int ret = -1;
     mHeap = 0;
     ret = s->captureScreen(display, &mHeap,
@@ -763,7 +763,7 @@ status_t ScreenshotClient::update(const sp<IBinder>& display,
 }
 
 void ScreenshotClient::release() {
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     mHeap = 0;
 #else
     if (mHaveBuffer) {
diff --git a/services/surfaceflinger/Android.mk b/services/surfaceflinger/Android.mk
index a25aa52..eef5e7b 100644
--- a/services/surfaceflinger/Android.mk
+++ b/services/surfaceflinger/Android.mk
@@ -41,6 +41,10 @@ ifeq ($(BOARD_EGL_NEEDS_LEGACY_FB),true)
         endif
 endif
 
+ifeq ($(TARGET_QCOM_DISPLAY_VARIANT),legacy)
+       LOCAL_CFLAGS += -DUSE_LEGACY_SCREENSHOT
+endif
+
 ifneq ($(NUM_FRAMEBUFFER_SURFACE_BUFFERS),)
   LOCAL_CFLAGS += -DNUM_FRAMEBUFFER_SURFACE_BUFFERS=$(NUM_FRAMEBUFFER_SURFACE_BUFFERS)
 endif
diff --git a/services/surfaceflinger/SurfaceFlinger.cpp b/services/surfaceflinger/SurfaceFlinger.cpp
index 42185fc..30b3dcf 100644
--- a/services/surfaceflinger/SurfaceFlinger.cpp
+++ b/services/surfaceflinger/SurfaceFlinger.cpp
@@ -2602,7 +2602,7 @@ status_t SurfaceFlinger::onTransact(
             const int pid = ipc->getCallingPid();
             const int uid = ipc->getCallingUid();
             if ((uid != AID_GRAPHICS) &&
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
                  (uid != AID_SYSTEM) &&
 #endif
                     !PermissionCache::checkPermission(sAccessSurfaceFlinger, pid, uid)) {
@@ -2613,7 +2613,7 @@ status_t SurfaceFlinger::onTransact(
             break;
         }
         case CAPTURE_SCREEN:
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
         case CAPTURE_SCREEN_DEPRECATED:
 #endif
         {
@@ -2831,7 +2831,7 @@ status_t SurfaceFlinger::captureScreen(const sp<IBinder>& display,
                 result = flinger->captureScreenImplLocked(hw,
                         producer, reqWidth, reqHeight, minLayerZ, maxLayerZ);
             } else {
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
                 // Should never get here
                 return BAD_VALUE;
 #else
@@ -3011,7 +3011,7 @@ status_t SurfaceFlinger::captureScreenImplLocked(
 
 status_t SurfaceFlinger::captureScreenImplCpuConsumerLocked(
         const sp<const DisplayDevice>& hw,
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
         sp<IMemoryHeap>* heap, uint32_t* w, uint32_t* h,
 #else
         const sp<IGraphicBufferProducer>& producer,
@@ -3069,7 +3069,7 @@ status_t SurfaceFlinger::captureScreenImplCpuConsumerLocked(
         // have to wrap it with a CPU->CPU path, which is what
         // glReadPixels essentially is.
 
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
         size_t size = reqWidth * reqHeight * 4;
         // allocate shared memory large enough to hold the
         // screen capture
@@ -3130,7 +3130,7 @@ status_t SurfaceFlinger::captureScreenImplCpuConsumerLocked(
     return result;
 }
 
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
 status_t SurfaceFlinger::captureScreen(const sp<IBinder>& display,
         sp<IMemoryHeap>* heap,
         uint32_t* outWidth, uint32_t* outHeight,
diff --git a/services/surfaceflinger/SurfaceFlinger.h b/services/surfaceflinger/SurfaceFlinger.h
index cde4ff2..f094df9 100644
--- a/services/surfaceflinger/SurfaceFlinger.h
+++ b/services/surfaceflinger/SurfaceFlinger.h
@@ -190,7 +190,7 @@ class SurfaceFlinger : public BinderService<SurfaceFlinger>,
             const sp<IGraphicBufferProducer>& producer,
             uint32_t reqWidth, uint32_t reqHeight,
             uint32_t minLayerZ, uint32_t maxLayerZ, bool isCpuConsumer);
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
     virtual status_t captureScreen(const sp<IBinder>& display, sp<IMemoryHeap>* heap,
         uint32_t* width, uint32_t* height, uint32_t reqWidth,
         uint32_t reqHeight, uint32_t minLayerZ, uint32_t maxLayerZ);
@@ -316,7 +316,7 @@ class SurfaceFlinger : public BinderService<SurfaceFlinger>,
 
     status_t captureScreenImplCpuConsumerLocked(
             const sp<const DisplayDevice>& hw,
-#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#if defined(BOARD_EGL_NEEDS_LEGACY_FB) || defined(USE_LEGACY_SCREENSHOT)
             sp<IMemoryHeap>* heap, uint32_t* width, uint32_t* height,
 #else
             const sp<IGraphicBufferProducer>& producer,
-- 
1.8.4

